{"version":3,"sources":["components/Filter/Filter.module.css","components/TodoContact/TodoContact.module.css","components/TodoContact/TodoContact.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/ContactsList/List.module.css"],"names":["module","exports","TodoContact","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","titleText","this","headStyle","labelStyle","inputStyle","onChange","type","button","Component","ContactsList","contacts","onDeleteContact","map","id","listItem","onClick","Filter","filterTitle","defaultProps","filterValue","App","filter","addContact","todo","shortid","generate","alreadyInContacts","find","contact","alert","prevState","ChangeFilter","deleteContact","todoId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","console","log","setItem","stringify","normalizedFilter","toLowerCase","visibleTodos","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6375d674.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelStyle\":\"Filter_labelStyle__3acRa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headStyle\":\"TodoContact_headStyle__1VcdP\",\"labelStyle\":\"TodoContact_labelStyle__2jko_\",\"inputStyle\":\"TodoContact_inputStyle__3jQdN\",\"button\":\"TodoContact_button__11rkb\",\"titleText\":\"TodoContact_titleText__2ylt8\"};","import React, { Component } from 'react';\nimport s from './TodoContact.module.css';\n// import shortid from 'shortid';\n\nclass TodoContact extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.name, this.state.number);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <div className={s.titleText}>\n        <h1>Phonebook</h1>\n        <form onSubmit={this.handleSubmit} className={s.headStyle}>\n          <label className={s.labelStyle}>\n            Name\n            <input\n              className={s.inputStyle}\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={s.labelStyle}>\n            Number\n            <input\n              className={s.inputStyle}\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default TodoContact;\n","import React from 'react';\nimport s from './List.module.css';\nimport PropTypes from 'prop-types';\n// import shortid from 'shortid';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.contacts}>\n    {contacts.map(({ id, name, number }) => (\n      <li className={s.listItem} key={id}>\n        <p>\n          {name}: {number}\n        </p>\n        <button\n          type=\"button\"\n          className={s.button}\n          onClick={() => onDeleteContact(id)}\n        >\n          Удалить\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <div className={s.filterTitle}>\n    <h2>Contacts</h2>\n    <label className={s.labelStyle}>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  </div>\n);\n\nFilter.defaultProps = {\n  filterValue: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport TodoContact from './components/TodoContact';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\n\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    // name: '',\n    // number: '',\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const todo = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const { contacts } = this.state;\n    const alreadyInContacts = contacts.find(\n      contact => contact.name === todo.name,\n    );\n    if (alreadyInContacts) {\n      alert(`${alreadyInContacts.name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [todo, ...prevState.contacts],\n    }));\n  };\n\n  ChangeFilter = e => {\n    const { value } = e.currentTarget;\n\n    this.setState({ filter: value });\n  };\n\n  deleteContact = todoId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('Add componentDidUpdate');\n\n    if (this.state.contacts !== prevState.contact) {\n      console.log('Обновились контакты');\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const visibleTodos = this.state.contacts.filter(todo =>\n      todo.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <>\n        <TodoContact onSubmit={this.addContact} />\n        <Filter value={this.state.filter} onChange={this.ChangeFilter} />\n        <ContactsList\n          contacts={visibleTodos}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"List_contacts__3lfOE\",\"listItem\":\"List_listItem__1z_Ld\",\"button\":\"List_button__2K-Bi\"};"],"sourceRoot":""}